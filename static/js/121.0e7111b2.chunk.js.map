{"version":3,"file":"static/js/121.0e7111b2.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/Pages/ContactsPage/ContactsPage.module.css?6d4e","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactListItem/ContactListItem.module.css?7127","components/ContactListItem/ContactListItem.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","components/Pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"mainContainer\":\"ContactsPage_mainContainer__P7-OS\"};","// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"ContactForm_contactForm__y0Rca\",\"contactLabel\":\"ContactForm_contactLabel__vt5it\",\"contactInput\":\"ContactForm_contactInput__z6XOX\",\"contactButton\":\"ContactForm_contactButton__jSKp4\"};","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../Redux/Contacts/contactsSlice';\nimport { nanoid } from '@reduxjs/toolkit';\nimport css from './ContactForm.module.css';\nimport Notiflix from 'notiflix';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contactsSelector = useSelector((state) => state.contacts);\n\n  const handleSubmit = useCallback((e) => {\n    e.preventDefault();\n\n    const form = e.target;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (contactsSelector.items.find((contact) => contact.name === name)) {\n      Notiflix.Notify.failure(`${name} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    form.reset();\n  }, [contactsSelector.items, dispatch]);\n\n  return (\n    <form className={css.contactForm} onSubmit={handleSubmit}>\n      <label className={css.contactLabel} htmlFor={nanoid()}>\n        Name <br />\n      </label>\n      <input\n        className={css.contactInput}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label className={css.contactLabel} htmlFor={nanoid()}>\n        Number<br />\n      </label>\n      <input\n        className={css.contactInput}\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button className={css.contactButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterContainer\":\"Filter_filterContainer__8G57N\",\"filterLabel\":\"Filter_filterLabel__+pnW-\",\"filterInput\":\"Filter_filterInput__1Cysk\",\"filterText\":\"Filter_filterText__QGy-k\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from '../Redux/Contacts/filterSlice';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n\n  const handleFilterChange = (filter) => {\n    dispatch(setFilter(filter));\n  };\n\n  const changeFilterValue = (e) => {\n    handleFilterChange(e.currentTarget.value);\n  };\n\n  return (\n      <div className={css.filterContainer}>\n        <label className={css.filterLabel}>\n          <p className={css.filterText}>Find contacts by name</p>\n        </label>\n        <input\n          className={css.filterInput}\n          type=\"text\"\n          onChange={changeFilterValue}\n        />\n      </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactItem\":\"ContactListItem_contactItem__g+7xP\",\"contactName\":\"ContactListItem_contactName__kCRjB\",\"contactIcon\":\"ContactListItem_contactIcon__yYOGu\",\"contactNumber\":\"ContactListItem_contactNumber__QRtzo\",\"contactButton\":\"ContactListItem_contactButton__SfQ8Z\",\"deleteIcon\":\"ContactListItem_deleteIcon__dQL-8\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../Redux/Contacts/contactsSlice';\nimport css from './ContactListItem.module.css';\nimport Contact from './icons/contacts.png';\nimport Delete from './icons/delete.png';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={css.contactItem}>\n      <img src={Contact} alt=\"Contact Icon\" className={css.contactIcon} />\n      <p className={css.contactName}>{name}:</p>\n      <p className={css.contactNumber}>{number}</p>\n      <button\n        className={css.contactButton}\n        type=\"button\"\n        onClick={() => {\n          dispatch(deleteContact(id));\n        }}\n      >\n        <img src={Delete} alt=\"Delete Icon\" className={css.deleteIcon} />\n      </button>\n    </li>\n  );\n};\n\nexport default ContactListItem;\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"filterNoContacts\":\"ContactList_filterNoContacts__0F0QR\"};","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts, deleteContact } from '../Redux/Contacts/contactsSlice';\nimport ContactListItem from '../ContactListItem';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector((state) => state.contacts.items);\n  const filter = useSelector((state) => state.filter.value);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleDelete = (contactId) => {\n    dispatch(deleteContact(contactId));\n  };\n\n  const filteredContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const isFiltering = filter !== '';\n  const hasContacts = filteredContacts.length > 0;\n\n  return (\n    <div>\n      {hasContacts ? (\n        <ul className={css.contactList}>\n          {filteredContacts.map((contact) => (\n            <ContactListItem\n              key={contact.id}\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n              onDelete={handleDelete}\n            />\n          ))}\n        </ul>\n      ) : (\n        isFiltering && <p className={css.filterNoContacts}>No contacts found</p>\n      )}\n    </div>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport css from './ContactsPage.module.css';\nimport ContactForm from '../../ContactForm';\nimport Filter from '../../Filter';\nimport ContactList from '../../ContactList';\nimport { fetchContacts } from '../../Redux/Contacts/contactsSlice';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  }, [dispatch])\n\n  return (\n    <div className={css.mainContainer}>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  )\n};\n\nexport default ContactsPage;\n"],"names":["dispatch","useDispatch","contactsSelector","useSelector","state","contacts","handleSubmit","useCallback","e","preventDefault","form","target","name","elements","value","number","items","find","contact","Notiflix","addContact","reset","className","css","onSubmit","htmlFor","nanoid","type","pattern","title","required","onChange","filter","currentTarget","setFilter","id","src","alt","onClick","deleteContact","useEffect","fetchContacts","handleDelete","contactId","filteredContacts","toLowerCase","includes","isFiltering","hasContacts","length","map","onDelete"],"sourceRoot":""}